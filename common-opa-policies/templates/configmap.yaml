---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Release.Namespace }}
data:
{{ (.Files.Glob "common-policies/*").AsConfig | indent 2 }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Chart.Name }}-public-keys
  namespace: {{ .Release.Namespace }}
data:
  public_keys.rego: |
    package public_keys
  {{- $configmap := (lookup "v1" "ConfigMap" .Release.Namespace .Values.external_configmaps.access_public_keys.name).data }}
  {{- $realm_name := include "common.read.secret" (dict "ChartName" .Chart.Name "Namespace" .Release.Namespace "Name" .Values.external_secrets.keycloak_realm_public_key.name "Key" .Values.external_secrets.keycloak_realm_public_key.key "LocalDevelopment" .Values.local_chart_development) -}}
  {{- $realm_kid := include "common.read.secret" (dict "ChartName" .Chart.Name "Namespace" .Release.Namespace "Name" .Values.external_secrets.keycloak_kids.name "Key" .Values.external_secrets.keycloak_kids.key "LocalDevelopment" .Values.local_chart_development) -}}
  {{- if $configmap }}
    jwt_public_keys := {
        {{ range $key, $val := $configmap }}
        {{- $key | quote }}: {{ $val | trimSuffix "\n" | quote }},
        {{ end -}}
        {{ $realm_kid | quote }}: {{ $realm_name | quote }}
    }
  {{ else }}
    {{ if .Values.local_chart_development }}
      {{ printf "Ignoring API server errors to allow templating" }}
    {{ else }}
      {{ printf "ERROR | %s | The configmap \"%s\" does not exist in the namespace \"%s\"" .Chart.Name .Chart.Name .Release.Namespace | fail }}
    {{ end }}
  {{ end }}